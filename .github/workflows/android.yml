name: Android CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Check code style
        run: ./gradlew spotlessCheck
        
      - name: Run Android Lint
        run: ./gradlew lint
        
      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

  test:
    name: Run Tests
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest
        
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/reports/tests/testDebugUnitTest/

  build:
    name: Build APK
    needs: [validate, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build all build types
        run: ./gradlew assembleDebug assembleRelease

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 커밋 히스토리 가져오기
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Generate Release Notes
        id: release_notes
        run: |
          # 이전 태그 찾기 (없으면 빈 문자열)
          previous_tag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          echo "## 변경 사항" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          if [ -z "$previous_tag" ]; then
            # 이전 태그가 없는 경우 모든 커밋 수집
            git log --pretty=format:"- %s" >> CHANGELOG.md
          else
            # 이전 태그부터 현재 태그까지의 커밋 수집
            git log --pretty=format:"- %s" ${previous_tag}..HEAD >> CHANGELOG.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/release/app-release-unsigned.apk
          name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          generate_release_notes: false  # GitHub 자동 생성 노트 비활성화
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
